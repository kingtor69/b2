#include <shared/system.h>
#include "BeebState.h"
#include <shared/debug.h>
#include <beeb/DiscImage.h>
#include "misc.h"
#include <beeb/BBCMicro.h>
#include <beeb/TVOutput.h>
#include <string.h>

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

BeebState::BeebState(std::unique_ptr<BBCMicroUniqueState> state)
    : creation_time(GetUTCTimeNow())
    , m_state(std::move(state)) {
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

BeebState::~BeebState() {
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

CycleCount BeebState::GetCycleCount() const {
    return m_state->cycle_count;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

std::unique_ptr<BBCMicro> BeebState::CloneBBCMicro() const {
    return std::make_unique<BBCMicro>(*m_state);
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

const BBCMicroType *BeebState::GetBBCMicroType() const {
    return m_state->type;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

std::shared_ptr<const DiscImage> BeebState::GetDiscImageByDrive(int drive) const {
    return m_state->GetDiscImage(drive);
}
//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

const std::string &BeebState::GetName() const {
    return m_name;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

void BeebState::SetName(std::string name) {
    m_name = name;
}

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
